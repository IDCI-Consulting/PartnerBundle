<?php

/**
 *
 * @author:  Baptiste BOUCHEREAU <baptiste.bouchereau@idci-consulting.fr>
 * @author:  Gabriel BONDAZ <gabriel.bondaz@idci-consulting.fr>
 * @licence: GPL
 *
 */

namespace IDCI\Bundle\PartnerBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PartnerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartnerRepository extends EntityRepository
{
    /**
     * getAllOrderByNameQueryBuilder
     *
     * @return QueryBuilder
     */
    public function getAllOrderByNameQueryBuilder()
    {
        $qb = $this->createQueryBuilder('pr');
        $qb
            ->orderBy('pr.name', 'ASC')
        ;

        return $qb;
    }

    /**
     * getAllOrderByNameQuery
     *
     * @return Query
     */
    public function getAllOrderByNameQuery()
    {
        $qb = $this->getAllOrderByNameQueryBuilder();

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * getAllOrderByName
     *
     * @return DoctrineCollection
     */
    public function getAllOrderByName()
    {
        $q = $this->getAllOrderByNameQuery();

        return is_null($q) ? array() : $q->getResult();
    }

    /**
     * extractQueryBuilder
     *
     * @param array $params
     * @return QueryBuilder
     */
    public function extractQueryBuilder($params)
    {
        $qb = $this->getAllOrderByNameQueryBuilder();

        if(isset($params['id'])) {
            $qb
                ->andWhere('pr.id = :id')
                ->setParameter('id', $params['id'])
            ;
        }

        if(isset($params['ids'])) {
            $qb
                ->andWhere($qb->expr()->in('pr.id', $params['ids']))
            ;
        }

        if(isset($params['category_id'])) {
            $qb
                ->leftJoin('pr.categories', 'c')
                ->andWhere('c.id = :cat_id')
                ->setParameter('cat_id', $params['category_id'])
            ;
        }

        if(isset($params['category_ids'])) {
            $qb
                ->leftJoin('pr.categories', 'cs')
                ->andWhere($qb->expr()->in('cs.id', $params['category_ids']))
            ;
        }

        if(isset($params['parent_category_id'])) {
            $qb
                ->leftJoin('pr.categories', 'pc')
                ->andWhere('pc.parent = :parent_id')
                ->setParameter('parent_id', $params['parent_category_id'])
            ;
        }

        if(isset($params['parent_category_ids'])) {
            $qb
                ->leftJoin('pr.categories', 'pcs')
                ->andWhere($qb->expr()->in('pcs.parent', $params['parent_category_ids']))
            ;
        }

        if(isset($params['ancestor_category_id'])) {
            $qb
                ->leftJoin('pr.categories', 'pc')
                ->andWhere($qb->expr()->like('pc.tree', sprintf(
                    "'%%%d%s'",
                    $params['ancestor_category_id'],
                    Category::getTreeSeparator()
                )))
            ;
        }

        if(isset($params['ancestor_category_ids'])) {
            $qb->leftJoin('pr.categories', 'pcs');
            $temp = array();
            foreach($params['ancestor_category_ids'] as $id) {
                $temp[] = $qb->expr()->like('pcs.tree', sprintf(
                    "'%%%d%s'",
                    $id,
                    Category::getTreeSeparator()
                ));
            }
            $qb->andWhere(call_user_func_array(array($qb->expr(),'orx'), $temp));
        }

        if(isset($params['location_id'])) {
            $qb
                ->leftJoin('pr.locations', 'l')
                ->andWhere('l.id = :location_id')
                ->setParameter('location_id', $params['location_id'])
            ;
        }

        if(isset($params['location_ids'])) {
            $qb
                ->leftJoin('pr.locations', 'ls')
                ->andWhere($qb->expr()->in('ls.id', $params['location_ids']))
            ;
        }

        if(isset($params['location_city'])) {
            $qb
                ->leftJoin('pr.locations', 'ls')
                ->andWhere($qb->expr()->like('ls.city', ':location_city'))
                ->setParameter('location_city', $params['location_city'])
            ;
        }

        if(isset($params['location_country'])) {
            $qb
                ->leftJoin('pr.locations', 'ls')
                ->andWhere($qb->expr()->like('ls.country', ':location_country'))
                ->setParameter('location_country', $params['location_country'])
            ;
        }

        if(isset($params['location_zip_code'])) {
            $qb
                ->leftJoin('pr.locations', 'ls')
                ->andWhere($qb->expr()->like('ls.zip_code', ':location_zip_code'))
                ->setParameter('location_zip_code', $params['location_zip_code'])
            ;
        }

        return $qb;
    }

    /**
     * extractQuery
     *
     * @param array $params
     * @return Query
     */
    public function extractQuery($params)
    {
        $qb = $this->extractQueryBuilder($params);

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * extract
     *
     * @param array $params
     * @return DoctrineCollection
     */
    public function extract($params)
    {
        $q = $this->extractQuery($params);

        return is_null($q) ? array() : $q->getResult();
    }
}
