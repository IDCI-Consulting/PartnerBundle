<?php

/**
 *
 * @author:  Baptiste BOUCHEREAU <baptiste.bouchereau@idci-consulting.fr> 
 * @author:  Gabriel BONDAZ <gabriel.bondaz@idci-consulting.fr>
 * @licence: GPL
 *
 */

namespace IDCI\Bundle\PartnerBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends EntityRepository
{
    /**
     * getOrderedQueryBuilder
     *
     * @return QueryBuilder
     */
    public function getOrderedQueryBuilder()
    {
        $qb = $this->createQueryBuilder('loc');
        $qb->orderBy('loc.name', 'ASC');

        return $qb;
    }

    /**
     * getOrderedQuery
     *
     * @return Query
     */
    public function getOrderedQuery()
    {
        $qb = $this->getOrderedQueryBuilder();

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * getOrdered
     *
     * @return DoctrineCollection
     */
    public function getOrdered()
    {
        $q = $this->getOrderedQuery();

        return is_null($q) ? array() : $q->getResult();
    }

    /**
     * queryQueryBuilder
     *
     * @param array Parameters
     * @return QueryBuilder
     */
    public function queryQueryBuilder($params)
    {
        $qb = $this->getOrderedQueryBuilder();

        if(isset($params['id'])) {
            $qb
                ->andWhere('loc.id = :id')
                ->setParameter('id', $params['id'])
            ;
        }

        if(isset($params['ids'])) {
            $qb
                ->andWhere($qb->expr()->in('loc.id', $params['ids']))
            ;
        }

        return $qb;
    }

    /**
     * queryQuery
     *
     * @param array Parameters
     * @return Query
     */
    public function queryQuery($params)
    {
        $qb = $this->queryQueryBuilder($params);

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * query
     *
     * @param array Parameters
     * @return DoctrineCollection
     */
    public function query($params)
    {
        $q = $this->queryQuery($params);

        return is_null($q) ? array() : $q->getResult();
    }
}
